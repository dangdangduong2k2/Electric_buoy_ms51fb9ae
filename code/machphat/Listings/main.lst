C51 COMPILER V9.60.7.0   MAIN                                                              11/16/2024 14:41:00 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDIR(.\library) DEF
                    -INE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          #define PLD_SIZE 32
   4          #define PLD_S 32
   5          
   6          struct eeprom_type {
   7            uint8_t init;
   8            uint8_t pair;
   9            uint8_t main_address[6];
  10          } xdata eData;
  11          
  12          uint8_t xdata MAC[6];
  13          uint16_t thresh_hold;
  14          uint8_t tx_addr[5] = {0x45, 0x55, 0x67, 0x10, 0x21};
  15          uint8_t dataT[PLD_S];
  16          uint8_t dataR[PLD_S];
  17          uint8_t ret=3;
  18          uint8_t bump=0;
  19          uint32_t count;
  20          uint8_t set=0;
  21          uint16_t tick;
  22          uint8_t d;
  23          void GPIO_INIT() {
  24   1        P04_PushPull_Mode;
  25   1        P03_PushPull_Mode;
  26   1        P10_PushPull_Mode;
  27   1        P00_PushPull_Mode;
  28   1        P01_Input_Mode;
  29   1        P11_Input_Mode;
  30   1        P12_Input_Mode;
  31   1        P13_PushPull_Mode;
  32   1        P14_Input_Mode;
  33   1        P17_Input_Mode;
  34   1      }
  35          void read_mac(void) {
  36   1        uint8_t uid[12];
  37   1        uint8_t i;
  38   1        Read_UID(&uid);
  39   1        for (i = 0; i < 6; i++) {
  40   2          MAC[i] = uid[i] ^ uid[i + 6];
  41   2        }
  42   1      }
  43          
  44          void USER_CONDITION(void)
  45          {
  46   1        if(P11==0)
  47   1        {
  48   2          bump++; 
  49   2          while(!P11);
  50   2        }
  51   1        if(2<bump)
  52   1        {
  53   2          bump=0;
  54   2        }
C51 COMPILER V9.60.7.0   MAIN                                                              11/16/2024 14:41:00 PAGE 2   

  55   1      
  56   1      
  57   1        if(bump==0)
  58   1        {
  59   2          thresh_hold=P14;
  60   2          
  61   2          
  62   2          if(tick<50)
  63   2          {
  64   3            P13=1;
  65   3          }
  66   2          if(tick==50)
  67   2          {
  68   3            P13=0;
  69   3            if(thresh_hold ==0)
  70   3            {
  71   4              if(P17)
  72   4              {
  73   5                dataT[7]=0xae;  
  74   5              }
  75   4              else
  76   4              {
  77   5                dataT[7]=0x00;  
  78   5              }
  79   4            }
  80   3      
  81   3            if(thresh_hold ==1)
  82   3            {
  83   4              if(P17)
  84   4              {
  85   5                dataT[7]=0x00;  
  86   5              }
  87   4              else
  88   4              {
  89   5                dataT[7]=0xae;  
  90   5              }
  91   4            }
  92   3            ret=nrf24_transmit(dataT,32); 
  93   3          }
  94   2          
  95   2          if(100<=tick) 
  96   2          {
  97   3            tick=0; 
  98   3          }
  99   2          
 100   2          
 101   2        
 102   2        }
 103   1        else if(bump==1)
 104   1        {
 105   2          P13=0;
 106   2          dataT[7]=0xae;
 107   2          if(tick==50)
 108   2          {
 109   3            
 110   3            ret=nrf24_transmit(dataT,32); 
 111   3            
 112   3          }
 113   2          if(100<=tick)
 114   2          {
 115   3            tick=0; 
 116   3          }
C51 COMPILER V9.60.7.0   MAIN                                                              11/16/2024 14:41:00 PAGE 3   

 117   2        
 118   2        }
 119   1        else if(bump==2)
 120   1        {
 121   2          P13=1;
 122   2          dataT[7]=0x00;
 123   2          if(tick==50)
 124   2          {
 125   3            
 126   3            ret=nrf24_transmit(dataT,32); 
 127   3            
 128   3          }
 129   2          if(100<=tick)
 130   2          {
 131   3            tick=0; 
 132   3          }
 133   2        }
 134   1        while(!P12)
 135   1        {
 136   2          P13=0;
 137   2          dataT[7]=0x1e;
 138   2          ret=nrf24_transmit(dataT,32); 
 139   2          delay_ms(1000);
 140   2        }
 141   1      }
 142          void main() {
 143   1        MODIFY_HIRC_166();
 144   1        GPIO_INIT();
 145   1        read_mac();
 146   1        SPI_Initial();  
 147   1        csn_high();
 148   1        ce_high();
 149   1        delay_ms(5);
 150   1        ce_low();
 151   1        csn_low();
 152   1        nrf24_init();
 153   1        nrf24_stop_listen();
 154   1        nrf24_auto_ack_all(auto_ack);
 155   1        nrf24_en_ack_pld(disable);
 156   1        nrf24_dpl(disable);
 157   1        nrf24_set_crc(no_crc, _1byte);
 158   1        nrf24_tx_pwr(_0dbm);
 159   1        nrf24_data_rate(_250kbps);
 160   1        nrf24_set_channel(10);
 161   1        nrf24_set_addr_width(5);
 162   1        nrf24_set_rx_dpl(0, disable);
 163   1        nrf24_set_rx_dpl(1, disable);
 164   1        nrf24_set_rx_dpl(2, disable);
 165   1        nrf24_set_rx_dpl(3, disable);
 166   1        nrf24_set_rx_dpl(4, disable);
 167   1        nrf24_set_rx_dpl(5, disable);
 168   1        nrf24_pipe_pld_size(0, PLD_S);
 169   1        nrf24_auto_retr_delay(4);
 170   1        nrf24_auto_retr_limit(10);
 171   1        nrf24_open_tx_pipe(tx_addr);
 172   1        nrf24_open_rx_pipe(0, tx_addr);
 173   1        ce_high();
 174   1        dataT[0]=0xfe;
 175   1        for(d=0;d<6;d++)
 176   1        {
 177   2          dataT[d+1]=MAC[d];
 178   2        }
C51 COMPILER V9.60.7.0   MAIN                                                              11/16/2024 14:41:00 PAGE 4   

 179   1        while (1) 
 180   1        {
 181   2           USER_CONDITION();
 182   2           tick++;
 183   2           delay_ms(1);
 184   2        }
 185   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5041    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =    102     134
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       8
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
